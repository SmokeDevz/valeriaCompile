{"version":3,"sources":["./src/app/pages/order-list-page/order-list-page.module.ts","./src/app/pages/order-list-page/order-list-page.ts","./src/app/pages/order-list-page/order-list-page.html"],"names":[],"mappings":"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","file":"pages-order-list-page-order-list-page-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { OrderListPage } from './order-list-page';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  declarations: [\n    OrderListPage,\n  ],\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: OrderListPage\n      }\n    ]),\n    SharedModule\n  ],\n})\nexport class OrderListPageModule {}\n","import { Component, Injector, ViewChild } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { Order } from '../../services/order';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { IonContent } from '@ionic/angular';\nimport {environment} from \"../../../environments/environment\";\n\n@Component({\n  selector: 'page-order-list-page',\n  templateUrl: 'order-list-page.html',\n  styleUrls: ['order-list-page.scss']\n})\nexport class OrderListPage extends BasePage {\n\n  @ViewChild(IonContent, { static: true }) content: IonContent;\n\n  public orders: Order[] = [];\n\n  public loadAndScroll: Observable<any>;\n  protected contentLoaded: Subject<any>;\n\n  constructor(injector: Injector,\n    private orderService: Order) {\n    super(injector);\n  }\n\n  enableMenuSwipe(): boolean {\n    return false;\n  }\n\n  ngOnInit() {\n    this.contentLoaded = new Subject();\n\n    this.loadAndScroll = merge(\n      this.content.ionScroll,\n      this.contentLoaded\n    );\n  }\n\n  async ionViewDidEnter() {\n\n    if (!this.orders.length) {\n      this.showLoadingView({ showOverlay: false });\n      this.loadData();\n    }\n\n    const title = await this.getTrans('MY_ORDERS');\n    this.setPageTitle(title);\n\n    this.setMetaTags({\n      title: title\n    });\n    \n  }\n\n  async loadData(event: any = {}) {\n\n    try {\n\n      this.refresher = event.target;\n\n      this.orders = await this.orderService.load();\n  \n      if (this.orders.length) {\n        this.showContentView();\n      } else {\n        this.showEmptyView();\n      }\n\n      this.onRefreshComplete(this.orders);\n\n      setTimeout(() => {\n        this.contentLoaded.next();\n      }, 400);\n      \n    } catch (error) {\n      this.translate.get('ERROR_NETWORK').subscribe((str) => this.showToast(str));\n      this.showErrorView();\n    }\n\n  }\n\n  trackByFn(index: number, item: any) {\n    if (!item) return null;\n    return item.id;\n  }\n  replaceUrl(never: any) {\n\n    return never.replace('http://localhost:1337/api/', environment.serverUrl);\n  }\n}\n","<ion-header class=\"ion-no-border\">\n\n    <ion-toolbar fixed>\n        <ion-buttons slot=\"start\">\n            <ion-back-button text=\"\"></ion-back-button>\n        </ion-buttons>\n\n\n\n        <div class=\"show-sm-up\" style=\"display: flex; flex-direction: column;  padding-bottom: 8px;\">\n            <div class=\"logo\" style=\"display: flex;\">\n\n                <h4>ULTIMOS PEDIDOS</h4>\n            </div>\n        </div>\n\n    </ion-toolbar>\n\n</ion-header>\n\n<ion-content #container scrollEvents=\"true\">\n\n    <ion-refresher slot=\"fixed\" (ionRefresh)=\"loadData($event)\">\n        <ion-refresher-content pullingText=\"{{ 'PULL_TO_REFRESH' | translate }}\"\n            refreshingText=\"{{ 'REFRESHING' | translate }}\">\n        </ion-refresher-content>\n    </ion-refresher>\n\n    <ion-grid fixed>\n\n        <empty-view *ngIf=\"isErrorViewVisible\" icon=\"alert-circle-outline\" [text]=\"'ERROR_DATA' | translate\">\n        </empty-view>\n\n        <empty-view *ngIf=\"isEmptyViewVisible\" image=\"./assets/imgs/undraw_no_data_qbuo.svg\" imageWidth=\"200\"\n            [text]=\"'EMPTY_DATA' | translate\">\n        </empty-view>\n\n        <ion-row class=\"ion-justify-content-center\" *ngIf=\"isContentViewVisible\">\n            <ion-col size-xs=\"12\" size-lg=\"10\">\n                <ion-list lines=\"none\">\n\n                    <ion-item class=\"radius ion-margin-vertical\" color=\"light\"\n                        *ngFor=\"let order of orders;trackBy:trackByFn\" detail=\"false\" [routerLink]=\"['./' + order.id]\">\n\n                        <ion-thumbnail slot=\"start\">\n                            <img src=\"./assets/imgs/placeholder.png\"\n                                [lazyLoad]=\"order.firstItem.featuredImageThumb?.url()\"\n                                [customObservable]=\"loadAndScroll\" />\n                        </ion-thumbnail>\n\n                        <div class=\"full-width\">\n\n                            <ion-row class=\"ion-align-items-center\">\n                                <ion-col size-xs=\"12\" size-md=\"9\">\n\n                                    <ion-label class=\"ion-text-wrap\" style=\"margin-top: 6px;\">\n\n                                        <ion-row>\n\n                                            <p class=\"text-small\">\n                                                {{ order.createdAt | dateGlobal: 'mediumDate' }}\n                                            </p>\n\n                                        </ion-row>\n\n                                        <ion-row style=\"padding:0; margin:0; display: flex; flex-direction: column;\">\n                                            <ion-label style=\"font-weight: bold; margin-right: 4px;\" color=\"primary\">\n                                               Pedido: #{{ order.number }} |\n                                            </ion-label>\n                                            <ion-row style=\"padding:0; margin:0\" >\n\n                                                <ion-row  style=\"font-weight: bold;\">\n                                                    <ion-label\n                                                        *ngIf=\"order?.status === 'Unpaid'\" color=\"danger\">SIN PAGAR</ion-label>\n                                                    <ion-label style=\"\"  color=\"primary\"\n                                                        *ngIf=\"order?.status === 'Paid'\">PAGADO</ion-label>\n                                                    <ion-label\n                                                        *ngIf=\"order?.status === 'Packed'\">EMPACANDO</ion-label>\n                                                    <ion-label\n                                                        *ngIf=\"order?.status === 'Shipped Out'\">DESPACHADO</ion-label>\n                                                    <ion-label\n                                                        *ngIf=\"order?.status === 'Delivered'\">ENTREGADO</ion-label>\n                                                    <ion-label color=\"alert\"\n                                                        *ngIf=\"order?.status === 'Cancelled'\">CANCELADO</ion-label>\n                                                </ion-row>\n                                            </ion-row>\n                                        </ion-row>\n\n                                        \n\n                                        <p class=\"link ellipsis text-normal\" style=\"margin-top: 6px; margin-bottom: 6px;\">\n                                            {{ order.prettyItems() }}\n                                        </p>\n\n\n                                    </ion-label>\n                                </ion-col>\n\n                                <ion-col size-xs=\"12\" size-md=\"3\">\n                                    <ion-button shape=\"round\" color=\"dark\">\n                                       DETALLE\n                                        <ion-icon slot=\"end\" name=\"chevron-forward\"></ion-icon>\n                                    </ion-button>\n                                </ion-col>\n\n                            </ion-row>\n\n                        </div>\n\n                    </ion-item>\n\n                </ion-list>\n            </ion-col>\n        </ion-row>\n\n        <ion-row class=\"ion-margin-vertical ion-justify-content-center\" *ngIf=\"isLoadingViewVisible\">\n            <ion-col size-xs=\"12\" size-lg=\"10\">\n                <ngx-skeleton-loader count=\"12\" [theme]=\"{ 'border-radius': '0', height: '100px' }\">\n                </ngx-skeleton-loader>\n            </ion-col>\n        </ion-row>\n\n    </ion-grid>\n\n</ion-content>"],"sourceRoot":"webpack:///"}