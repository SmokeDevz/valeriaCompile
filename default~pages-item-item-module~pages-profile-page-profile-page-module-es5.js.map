{"version":3,"sources":["webpack:///src/app/pages/forgot-password/forgot-password.module.ts","webpack:///src/app/pages/forgot-password/forgot-password.html","webpack:///src/app/pages/forgot-password/forgot-password.ts","webpack:///src/app/pages/sign-in/sign-in.module.ts","webpack:///src/app/pages/sign-in/sign-in.html","webpack:///src/app/pages/sign-in/sign-in.ts"],"names":["ForgotPasswordPageModule","declarations","imports","entryComponents","ForgotPasswordPage","injector","userService","form","email","required","modalCtrl","dismiss","invalid","getTrans","message","showToast","showLoadingView","showOverlay","value","recoverPassword","showContentView","translate","get","subscribe","str","showAlert","code","onDismiss","onSubmit","selector","templateUrl","styleUrls","SignInPageModule","SignInPage","fb","authService","googlePlus","isLoadingByUsername","isLoadingByFacebook","isLoadingByGoogle","isSignUpLoading","showLoginForm","setupLoginForm","showSignUpForm","setupSignUpForm","googleSubscription","authState","user","loggedIntoGoogle","unsubscribe","username","password","name","minLength","isHybrid","loginViaFacebook","then","loggedViaFacebook","catch","e","console","log","login","res","loggedIntoFacebook","expirationDate","Date","setSeconds","getSeconds","authResponse","expiresIn","expirationDateFormatted","toISOString","facebookAuthData","id","userID","access_token","accessToken","expiration_date","loginWith","authData","loginViaFacebookFailure","error","transParams","attributes","window","dispatchEvent","CustomEvent","detail","userId","authToken","signIn","PROVIDER_ID","formData","Object","assign","currentUser","getCurrent","undefined","anonymous","signUp","create","component","modal","present"],"mappings":"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","file":"default~pages-item-item-module~pages-profile-page-profile-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { ForgotPasswordPage } from './forgot-password';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    ForgotPasswordPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    ForgotPasswordPage\n  ]\n})\nexport class ForgotPasswordPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-title>{{ 'FORGOT_PASSWORD' | translate }}</ion-title>\n    <ion-buttons slot=\"end\">\n        <ion-button (click)=\"onDismiss()\">\n          <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <ion-text color=\"dark\">\n    <p>{{ 'FORGOT_PASSWORD_HELP' | translate }}<p>\n  </ion-text>\n\n  <form [formGroup]=\"form\" #forgotPasswordForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n    <ion-label position=\"stacked\" color=\"medium\">\n      <span class=\"bold\">{{ 'EMAIL' | translate }}</span>\n    </ion-label>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n      <ion-input type=\"email\" formControlName=\"email\"\n        (keyup.enter)=\"forgotPasswordForm.ngSubmit.emit()\">\n      </ion-input>\n    </ion-item>\n\n    <ion-row class=\"ion-justify-content-center\">\n      <ion-col size-xs=\"6\" size-md=\"4\" class=\"ion-text-center\">\n        <ion-button type=\"submit\" shape=\"round\" expand=\"block\" color=\"light\"\n          [disabled]=\"isLoadingViewVisible\">\n          <ion-spinner color=\"dark\" *ngIf=\"isLoadingViewVisible\"></ion-spinner>\n          <span *ngIf=\"!isLoadingViewVisible\">{{ 'SUBMIT' | translate }}</span>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n  </form>\n</ion-content>","import { Component, Injector } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BasePage } from '../base-page/base-page';\nimport { User } from '../../services/user';\n\n@Component({\n  selector: 'page-forgot-password',\n  templateUrl: 'forgot-password.html',\n  styleUrls: ['forgot-password.scss']\n})\nexport class ForgotPasswordPage extends BasePage {\n\n  public form: FormGroup;\n\n  constructor (injector: Injector,\n    private userService: User) {\n    super(injector);\n\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n    });\n  }\n\n  enableMenuSwipe () {\n    return false;\n  }\n\n  onDismiss () {\n    this.modalCtrl.dismiss();\n  }\n\n  async onSubmit () {\n\n    if (this.form.invalid) {\n      const message = await this.getTrans('INVALID_FORM');\n      return this.showToast(message);\n    }\n\n    try {\n\n      await this.showLoadingView({ showOverlay: false });\n      \n      const email = this.form.value.email;\n      \n      await this.userService.recoverPassword(email);\n\n      this.showContentView();\n\n      this.translate.get('FORGOT_PASSWORD_SUCCESS')\n        .subscribe((str: string) => this.showAlert(str));\n\n    } catch (err) {\n\n      if (err.code === 205) {\n        this.translate.get('EMAIL_NOT_FOUND').subscribe(str => this.showToast(str));\n      } else {\n        this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n      }\n\n      this.showContentView();\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SignInPage } from './sign-in';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ForgotPasswordPageModule } from '../forgot-password/forgot-password.module';\n\n@NgModule({\n  declarations: [\n    SignInPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ForgotPasswordPageModule\n  ],\n  entryComponents: [\n    SignInPage\n  ]\n})\nexport class SignInPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-title></ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"onDismiss()\">\n        <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <div class=\"center\" *ngIf=\"!showLoginForm && !showSignUpForm\">\n    <div class=\"ion-text-center\">\n      <h3>{{ 'LOGIN' | translate }}</h3>\n      <p [innerHTML]=\"'LOGIN_INFO' | translate\"></p>\n      <ion-row>\n        <ion-col>\n          <ion-button color=\"primary\" expand=\"block\" fill=\"outline\" (click)=\"onLoginButtonTouched()\">\n            {{ 'LOGIN' | translate }}\n          </ion-button>\n        </ion-col>\n        <ion-col>\n          <ion-button color=\"primary\" expand=\"block\" (click)=\"onSignUpButtonTouched()\">\n            {{ 'SIGN_UP' | translate }}\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </div>\n  </div>\n\n  <div *ngIf=\"showLoginForm\">\n\n    <div class=\"ion-text-center\">\n      <img width=\"60\" src=\"https://image.flaticon.com/icons/png/512/116/116356.png\" />\n    </div>\n\n    <form class=\"ion-padding\" [formGroup]=\"form\" #loginForm=\"ngForm\" (ngSubmit)=\"onLogin()\" novalidate>\n\n      <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-bottom\">\n        <ion-input type=\"text\" formControlName=\"username\" [placeholder]=\"'Email '\">\n        </ion-input>\n      </ion-item>\n\n      <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-bottom\">\n        <ion-input type=\"password\" formControlName=\"password\" (keyup.enter)=\"loginForm.ngSubmit.emit()\"\n          [placeholder]=\"'PASSWORD'\">\n        </ion-input>\n      </ion-item>\n\n      <ion-row class=\"ion-margin-top ion-justify-content-center\">\n        <ion-col size-xs=\"8\" size-md=\"6\" class=\"ion-text-center\">\n          <ion-button class=\"ion-margin-vertical\" strong type=\"submit\" color=\"primary\" expand=\"block\" shape=\"round\"\n            [disabled]=\"isLoadingByFacebook || isLoadingByUsername || isLoadingByGoogle\">\n            <ion-spinner color=\"light\" *ngIf=\"isLoadingByUsername\"></ion-spinner>\n            <span *ngIf=\"!isLoadingByUsername\">INICIAR SESION</span>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n\n      <ion-row class=\"ion-justify-content-center\">\n        <ion-col hidden size-xs=\"6\" size-md=\"4\">\n          <ion-button type=\"button\" color=\"fb\" expand=\"block\" shape=\"round\"\n            [disabled]=\"isLoadingByFacebook || isLoadingByUsername || isLoadingByGoogle\"\n            (click)=\"onFacebookButtonTouched()\">\n            <ion-icon slot=\"start\" name=\"logo-facebook\" color=\"light\"></ion-icon>\n            <ion-spinner color=\"light\" *ngIf=\"isLoadingByFacebook\"></ion-spinner>\n            <span *ngIf=\"!isLoadingByFacebook\">{{ 'FACEBOOK' | translate }}</span>\n          </ion-button>\n        </ion-col>\n\n        <ion-col hidden size-xs=\"6\" size-md=\"4\">\n          <ion-button type=\"button\" color=\"google\" expand=\"block\" shape=\"round\"\n            [disabled]=\"isLoadingByFacebook || isLoadingByUsername || isLoadingByGoogle\"\n            (click)=\"onGoogleButtonTouched()\">\n            <ion-icon slot=\"start\" name=\"logo-google\" color=\"light\"></ion-icon>\n            <ion-spinner color=\"light\" *ngIf=\"isLoadingByGoogle\"></ion-spinner>\n            <span *ngIf=\"!isLoadingByGoogle\">{{ 'GOOGLE_LOGIN' | translate }}</span>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n\n    </form>\n\n    <ion-row>\n      <ion-col size=\"6\" class=\"ion-text-start\">\n        <ion-text color=\"dark\">\n          <p class=\"bold\" tappable (click)=\"onForgotPasswordButtonTouched()\">\n            RECUPERAR CONTRASEÑA\n          </p>\n        </ion-text>\n      </ion-col>\n      <ion-col size=\"6\" class=\"ion-text-end\">\n        <ion-text color=\"primary\">\n          <p class=\"bold\" (click)=\"onSignUpButtonTouched()\">\n            REGISTRAR CUENTA\n          </p>\n        </ion-text>\n\n      </ion-col>\n    </ion-row>\n\n  </div>\n\n  <div *ngIf=\"showSignUpForm\">\n\n    <div class=\"ion-text-center\">\n      <img width=\"60\" src=\"https://image.flaticon.com/icons/png/512/116/116356.png\" />\n    </div>\n\n    <form class=\"ion-padding\" [formGroup]=\"form\" #signupForm=\"ngForm\" (ngSubmit)=\"onSignUp()\" novalidate>\n\n      <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-bottom\">\n        <ion-input type=\"text\" formControlName=\"name\" [placeholder]=\"'NAME' | translate\">\n        </ion-input>\n      </ion-item>\n\n      <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-bottom\">\n        <ion-input type=\"text\" formControlName=\"username\" [placeholder]=\"'USERNAME' | translate\">\n        </ion-input>\n      </ion-item>\n\n      <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-bottom\">\n        <ion-input type=\"email\" formControlName=\"email\" [placeholder]=\"'EMAIL' | translate\"></ion-input>\n      </ion-item>\n\n      <ion-text color=\"dark\">\n        <p>\n          <small>{{ 'EMAIL_FIELD_HELP' | translate }}</small>\n        </p>\n      </ion-text>\n\n      <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-bottom\">\n        <ion-input [type]=\"!showPass ? 'password' : 'text' \" formControlName=\"password\"\n          (keyup.enter)=\"signupForm.ngSubmit.emit()\" [placeholder]=\"'PASSWORD' | translate\">\n        </ion-input>\n        <ion-button *ngIf=\"!showPass\" fill=\"clear\" color=\"dark\" type=\"button\" slot=\"end\"\n          (click)=\"this.showPass = !this.showPass;\">\n          <ion-icon name=\"eye-off\"></ion-icon>\n        </ion-button>\n        <ion-button *ngIf=\"showPass\" fill=\"clear\" color=\"dark\" type=\"button\" slot=\"end\"\n          (click)=\"this.showPass = !this.showPass;\">\n          <ion-icon name=\"eye\"></ion-icon>\n        </ion-button>\n      </ion-item>\n\n      <ion-text color=\"dark\">\n        <p>\n          <small>{{ 'PASSWORD_VALIDATION_MSG' | translate }}</small>\n        </p>\n      </ion-text>\n\n      <ion-row class=\"ion-justify-content-center\">\n        <ion-col size-xs=\"8\" size-md=\"6\" class=\"ion-text-center\">\n          <ion-button class=\"ion-margin-vertical\" strong type=\"submit\" color=\"primary\" expand=\"block\" shape=\"round\"\n            [disabled]=\"isSignUpLoading\">\n            <ion-spinner color=\"light\" *ngIf=\"isSignUpLoading\"></ion-spinner>\n            <span *ngIf=\"!isSignUpLoading\">{{ 'SIGN_UP' | translate }}</span>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n\n      <ion-row class=\"ion-justify-content-center\">\n        <ion-col size=\"6\" class=\"ion-text-center\">\n          <ion-button type=\"button\" fill=\"clear\" expand=\"block\" color=\"dark\" (click)=\"onLoginButtonTouched()\">\n            {{ 'BACK_TO_LOGIN' | translate }}\n          </ion-button>\n        </ion-col>\n      </ion-row>\n\n    </form>\n  </div>\n\n</ion-content>","import { Component, Injector, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BasePage } from '../base-page/base-page';\nimport { User } from '../../services/user';\nimport { Facebook, FacebookLoginResponse } from '@ionic-native/facebook/ngx';\nimport { ForgotPasswordPage } from '../forgot-password/forgot-password';\nimport { AuthService, GoogleLoginProvider } from 'angularx-social-login';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'page-sign-in',\n  templateUrl: 'sign-in.html',\n})\nexport class SignInPage extends BasePage {\n\n  public form: FormGroup;\n\n  @Input() showLoginForm: boolean;\n  @Input() showSignUpForm: boolean;\n\n  public isLoadingByUsername: boolean = false;\n  public isLoadingByFacebook: boolean = false;\n  public isLoadingByGoogle: boolean = false;\n  public isSignUpLoading: boolean = false;\n\n  public showPass: boolean;\n\n  public googleSubscription: Subscription;\n\n  constructor(injector: Injector,\n    private fb: Facebook,\n    private authService: AuthService,\n    private googlePlus: GooglePlus,\n    private userService: User) {\n    super(injector);\n  }\n\n  ngOnInit() {\n\n    if (this.showLoginForm) {\n      this.setupLoginForm();\n    } else if (this.showSignUpForm) {\n      this.setupSignUpForm();\n    }\n\n    this.googleSubscription = this.authService.authState.subscribe(user => {\n      if (user) {\n        this.loggedIntoGoogle(user);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.googleSubscription.unsubscribe();\n  }\n\n  enableMenuSwipe() {\n    return false;\n  }\n\n  onDismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n  onLoginButtonTouched() {\n    this.showLoginForm = true;\n    this.showSignUpForm = false;\n    this.setupLoginForm();\n  }\n\n  onSignUpButtonTouched() {\n    this.showLoginForm = false;\n    this.showSignUpForm = true;\n    this.setupSignUpForm();\n  }\n\n  setupLoginForm() {\n    this.form = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  setupSignUpForm() {\n    this.form = new FormGroup({\n      name: new FormControl('', Validators.required),\n      username: new FormControl('', Validators.required),\n      email: new FormControl(''),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    });\n  }\n\n  onFacebookButtonTouched() {\n\n    if (!this.isHybrid()) {\n      this.userService.loginViaFacebook()\n        .then((user: User) => this.loggedViaFacebook(user))\n        .catch(e => console.log('Error logging into Facebook', e));\n    } else {\n      this.fb.login(['public_profile'])\n        .then((res: FacebookLoginResponse) => this.loggedIntoFacebook(res))\n        .catch(e => console.log('Error logging into Facebook', e));\n    }\n\n  }\n\n  async loggedIntoFacebook(res: FacebookLoginResponse) {\n\n    let expirationDate = new Date();\n    expirationDate.setSeconds(expirationDate.getSeconds() + res.authResponse.expiresIn);\n\n    const expirationDateFormatted = expirationDate.toISOString();\n\n    const facebookAuthData = {\n      id: res.authResponse.userID,\n      access_token: res.authResponse.accessToken,\n      expiration_date: expirationDateFormatted\n    };\n\n    try {\n\n      await this.showLoadingView({ showOverlay: false });\n      this.isLoadingByFacebook = true;\n\n      const user = await this.userService.loginWith('facebook', {\n        authData: facebookAuthData\n      });\n\n      this.loggedViaFacebook(user);\n      this.isLoadingByFacebook = false;\n\n    } catch (error) {\n      this.loginViaFacebookFailure(error);\n      this.isLoadingByFacebook = false;\n    }\n\n  }\n\n  loginViaFacebookFailure(error: any) {\n    console.log('Error logging into Facebook', error);\n    this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n    this.showContentView();\n  }\n\n  loggedViaFacebook(user: User) {\n    this.showContentView();\n\n    const transParams = { name: user.attributes.name };\n\n    this.translate.get('LOGGED_IN_AS', transParams)\n      .subscribe(str => this.showToast(str));\n\n    window.dispatchEvent(new CustomEvent('user:login', {\n      detail: user\n    }));\n\n    this.onDismiss();\n  }\n\n  async onGoogleButtonTouched() {\n    if (this.isHybrid()) {\n      try {\n        const res = await this.googlePlus.login({});\n        this.loggedIntoGoogle({\n          id: res.userId,\n          authToken: res.accessToken\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n    }\n  }\n\n  async loggedIntoGoogle(res: any) {\n    console.log(\"Logged into Google\", res);\n\n    try {\n      this.isLoadingByGoogle = true;\n\n      const authData = {\n        id: res.id,\n        access_token: res.authToken\n      };\n\n      const user = await this.userService.loginWith(\"google\", { authData });\n\n      this.isLoadingByGoogle = false;\n\n      const transParams = { name: user.name };\n\n      this.translate\n        .get(\"LOGGED_IN_AS\", transParams)\n        .subscribe(str => this.showToast(str));\n\n      this.onDismiss();\n\n      window.dispatchEvent(new CustomEvent('user:login', {\n        detail: user\n      }));\n\n    } catch (err) {\n      console.log(\"Error logging into Google\", err);\n      this.isLoadingByGoogle = false;\n      this.translate.get(\"ERROR_NETWORK\").subscribe(str => this.showToast(str));\n      this.showContentView();\n    }\n  }\n\n  async onLogin() {\n\n    try {\n\n      if (this.form.invalid) {\n        const message = await this.getTrans('INVALID_FORM');\n        return this.showToast(message);\n      }\n\n      await this.showLoadingView({ showOverlay: false });\n      this.isLoadingByUsername = true;\n\n      let user = await this.userService.signIn(this.form.value);\n\n      this.showContentView();\n      this.isLoadingByUsername = false;\n\n      const transParams = { name: user.name };\n      this.translate.get('LOGGED_IN_AS', transParams)\n        .subscribe(str => this.showToast(str));\n\n      this.onDismiss();\n\n      window.dispatchEvent(new CustomEvent('user:login', {\n        detail: user\n      }));\n\n    } catch (err) {\n\n      if (err.code === 101) {\n        this.translate.get('INVALID_CREDENTIALS')\n          .subscribe(str => this.showToast(str));\n      } else {\n        this.translate.get('ERROR_NETWORK')\n          .subscribe(str => this.showToast(str));\n      }\n\n      this.showContentView();\n      this.isLoadingByUsername = false;\n    }\n  }\n\n  async onSignUp() {\n\n    try {\n\n      if (this.form.invalid) {\n        const message = await this.getTrans('INVALID_FORM');\n        return this.showToast(message);\n      }\n\n      const formData = Object.assign({}, this.form.value);\n\n      if (formData.email === '') {\n        delete formData.email;\n      }\n\n      await this.showLoadingView({ showOverlay: false });\n      this.isSignUpLoading = true;\n\n      let user = null;\n\n      const currentUser = User.getCurrent();\n\n      if (currentUser && currentUser.attributes.authData &&\n        currentUser.attributes.authData['anonymous'] !== undefined) {\n        formData.authData = { anonymous: null };\n        user = await currentUser.signUp(formData);\n      } else {\n        user = await this.userService.create(formData);\n      }\n\n      this.showContentView();\n      this.isSignUpLoading = false;\n\n      const transParams = { name: user.name };\n      this.translate.get('LOGGED_IN_AS', transParams).subscribe(str => this.showToast(str));\n\n      this.onDismiss();\n\n      window.dispatchEvent(new CustomEvent('user:login', {\n        detail: user\n      }));\n\n    } catch (err) {\n\n      console.log(err);\n\n      this.showContentView();\n      this.isSignUpLoading = false;\n\n      if (err.code === 202) {\n        this.translate.get('USERNAME_TAKEN').subscribe(str => this.showToast(str));\n      } else if (err.code === 203) {\n        this.translate.get('EMAIL_TAKEN').subscribe(str => this.showToast(str));\n      } else if (err.code === 125) {\n        this.translate.get('EMAIL_INVALID').subscribe(str => this.showToast(str));\n      } else {\n        this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n      }\n    }\n  }\n\n  async onForgotPasswordButtonTouched() {\n\n    await this.showLoadingView({ showOverlay: true });\n\n    const modal = await this.modalCtrl.create({\n      component: ForgotPasswordPage,\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n}"]}