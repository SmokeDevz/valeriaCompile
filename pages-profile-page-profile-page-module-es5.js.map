{"version":3,"sources":["webpack:///src/app/pages/change-password/change-password.module.ts","webpack:///src/app/pages/change-password/change-password.html","webpack:///src/app/pages/change-password/change-password.ts","webpack:///src/app/pages/profile-edit/profile-edit.module.ts","webpack:///src/app/pages/profile-edit/profile-edit.html","webpack:///src/app/pages/profile-edit/profile-edit.ts","webpack:///src/app/pages/profile-page/profile-page.module.ts","webpack:///src/app/pages/profile-page/profile-page.html","webpack:///src/app/pages/profile-page/profile-page.ts","webpack:///src/app/pages/settings-page/settings-page.module.ts","webpack:///src/app/pages/settings-page/settings-page.html","webpack:///src/app/pages/settings-page/settings-page.ts"],"names":["ChangePasswordPageModule","declarations","imports","entryComponents","ChangePasswordPage","injector","userService","user","getCurrent","form","oldPassword","required","minLength","password","confirmPassword","modalCtrl","dismiss","formData","value","invalid","translate","get","subscribe","str","showToast","showLoadingView","showOverlay","loginData","username","signIn","save","showContentView","code","onDismiss","onSubmit","selector","templateUrl","styleUrls","ProfileEditPageModule","ProfileEditPage","setupForm","file","photo","formGroupParams","name","attributes","email","emaail","authData","Object","assign","onFileUploaded","ProfilePageModule","forChild","path","component","ProfilePage","ngZone","checkIsGuest","getTrans","title","setPageTitle","setMetaTags","window","addEventListener","ev","detail","isGuest","undefined","page","onPresentSignInModal","navigateToRelative","create","componentProps","showLoginForm","modal","present","showSignUpForm","dispatchEvent","CustomEvent","goTo","onPresentChangePasswordModal","onPresentEditModal","onPresentSettingsModal","SettingsPageModule","SettingsPage","installationService","storage","event","isPushEnabled","checked","getId","id","setIsPushEnabled","preference","console","warn","lang","document","dir","setLang","use","onChangeLang"],"mappings":"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","file":"pages-profile-page-profile-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { ChangePasswordPage } from './change-password';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n \n@NgModule({\n  declarations: [\n    ChangePasswordPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    ChangePasswordPage\n  ]\n})\nexport class ChangePasswordPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"onDismiss()\">\n        <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>CAMBIAR PASSWORD</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" #passwordForm=\"ngForm\" novalidate>\n\n    <ion-label position=\"stacked\" color=\"medium\">\n      <span class=\"bold\">Password actual</span>\n    </ion-label>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n      <ion-input type=\"password\" formControlName=\"oldPassword\"></ion-input>\n    </ion-item>\n\n    <ion-label position=\"stacked\" color=\"medium\">\n      <span class=\"bold\">Nueva password</span>\n    </ion-label>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n      <ion-input type=\"password\" formControlName=\"password\"></ion-input>\n    </ion-item>\n\n    <ion-text color=\"dark\">\n      <p class=\"bold\">\n        <small>\n          {{ 'PASSWORD_VALIDATION_HELP' | translate }}\n        </small>\n      </p>\n    </ion-text>\n\n    <ion-label position=\"stacked\" color=\"medium\">\n      <span class=\"bold\">Repetir password</span>\n    </ion-label>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n      <ion-input type=\"password\" formControlName=\"confirmPassword\"\n        (keyup.enter)=\"passwordForm.ngSubmit.emit()\">\n      </ion-input>\n    </ion-item>\n\n  </form>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <div class=\"ion-text-center\">\n      <ion-button shape=\"round\" color=\"primary\" [disabled]=\"isLoadingViewVisible\" (click)=\"passwordForm.ngSubmit.emit()\">\n        <ion-spinner *ngIf=\"isLoadingViewVisible\"></ion-spinner>\n        <span *ngIf=\"!isLoadingViewVisible\">CAMBIAR</span>\n      </ion-button>\n    </div>\n  </ion-toolbar>\n</ion-footer>","\nimport { Component, Injector } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { User } from '../../services/user';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'page-change-password',\n  templateUrl: 'change-password.html',\n  styleUrls: ['change-password.scss']\n})\nexport class ChangePasswordPage extends BasePage {\n\n  public form: FormGroup;\n  private user: User;\n\n  constructor(injector: Injector, private userService: User) {\n\n    super(injector);\n\n    this.user = User.getCurrent();\n\n    this.form = new FormGroup({\n      oldPassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    });\n  }\n\n  enableMenuSwipe() {\n    return false;\n  }\n\n  onDismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n  async onSubmit() {\n\n    try {\n\n      let formData = this.form.value;\n\n      if (this.form.invalid) {\n        return this.translate.get('INVALID_FORM').subscribe(str => this.showToast(str));\n      }\n\n      if (formData.password !== formData.confirmPassword) {\n        return this.translate.get('PASSWORD_DOES_NOT_MATCH').subscribe(str => this.showToast(str));\n      }\n\n      await this.showLoadingView({ showOverlay: false });\n\n      let loginData = {\n        username: this.user.username,\n        password: formData.oldPassword\n      }\n\n      await this.userService.signIn(loginData);\n\n      await this.user.save({ password: formData.password });\n\n      this.translate.get('SAVED').subscribe(str => this.showToast(str));\n      this.showContentView();\n\n    } catch (err) {\n\n      if (err.code === 101) {\n        this.translate.get('PASSWORD_INVALID').subscribe(str => this.showToast(str));\n      } else {\n        this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n      }\n\n      this.showContentView();\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ProfileEditPage } from './profile-edit';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n \n@NgModule({\n  declarations: [\n    ProfileEditPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    ProfileEditPage\n  ]\n})\nexport class ProfileEditPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"onDismiss()\">\n        <ion-icon slot=\"start\" name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>EDITAR PERFIL</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" #profileForm=\"ngForm\" novalidate>\n    <ion-row style=\"display: flex; width: 100%; justify-content: center; align-items: center;\">\n      <div class=\"ion-margin-top\">\n        <app-upload-box (onFileUploaded)=\"onFileUploaded($event)\">\n        </app-upload-box>\n      </div>\n    </ion-row>\n\n    <ion-label position=\"stacked\" color=\"medium\">\n      <span class=\"bold\">NOMBRE</span>\n    </ion-label>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n      <ion-input type=\"text\" formControlName=\"name\"></ion-input>\n    </ion-item>\n\n    <div *ngIf=\"!user?.attributes.authData\">\n      <ion-label position=\"stacked\" color=\"medium\">\n        <span class=\"bold\">USERNAME</span>\n      </ion-label>\n      <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n        <ion-input type=\"text\" formControlName=\"username\"></ion-input>\n      </ion-item>\n    </div>\n\n    <ion-label position=\"stacked\" color=\"medium\">\n      <span class=\"bold\">EMAIL</span>\n    </ion-label>\n    <ion-item class=\"ion-margin-vertical\" lines=\"none\" color=\"light\">\n      <ion-input type=\"email\" formControlName=\"email\"\n        (keyup.enter)=\"profileForm.ngSubmit.emit()\">\n      </ion-input>\n    </ion-item>\n\n   \n\n  </form>\n</ion-content>\n\n<ion-footer>\n  <ion-toolbar>\n    <div class=\"ion-text-center\">\n      <ion-button type=\"submit\" shape=\"round\" color=\"primary\"\n        [disabled]=\"isLoadingViewVisible\"\n        (click)=\"profileForm.ngSubmit.emit()\">\n        <ion-spinner *ngIf=\"isLoadingViewVisible\"></ion-spinner>\n        <span *ngIf=\"!isLoadingViewVisible\">GUARDAR</span>\n      </ion-button>\n    </div>\n  </ion-toolbar>\n</ion-footer>","\nimport { Component, Injector } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { User } from '../../services/user';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ParseFile } from 'src/app/services/parse-file';\n\n@Component({\n  selector: 'page-profile-edit',\n  templateUrl: 'profile-edit.html',\n  styleUrls: ['profile-edit.scss']\n})\nexport class ProfileEditPage extends BasePage {\n\n  public photo: ParseFile;\n  public user: User;\n  public form: FormGroup;\n\n  constructor(injector: Injector) {\n    super(injector);\n    this.user = User.getCurrent();\n  }\n\n  enableMenuSwipe() {\n    return true;\n  }\n\n  ngOnInit() {\n    this.setupForm();\n  }\n\n  onFileUploaded(file: ParseFile) {\n    this.photo = file;\n  }\n\n  setupForm() {\n\n    let formGroupParams: any = {\n      name: new FormControl(this.user.attributes.name, Validators.required),\n      email: new FormControl(this.user.attributes.emaail)\n    };\n\n    // Show the username field if user logged in with username/password\n    if (!this.user.attributes.authData) {\n      formGroupParams.username = new FormControl(this.user.username, Validators.required);\n    }\n\n    this.form = new FormGroup(formGroupParams);\n  }\n\n  onDismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n  async onSubmit() {\n\n    try {\n\n      if (this.form.invalid) {\n        return this.translate.get('INVALID_FORM').subscribe(str => this.showToast(str));\n      }\n\n      this.showLoadingView({ showOverlay: false });\n\n      const formData = Object.assign({}, this.form.value);\n\n      if (this.photo) {\n        formData.photo = this.photo;\n      }\n\n      if (!formData.email) delete formData.email;\n\n      const user = User.getCurrent();\n\n      await user.save(formData);\n      this.showContentView();\n      this.translate.get('SAVED').subscribe(str => this.showToast(str));\n      this.onDismiss();\n\n    } catch (error) {\n\n      if (error.code === 202) {\n        this.translate.get('USERNAME_TAKEN').subscribe(str => this.showToast(str));\n      } else if (error.code === 203) {\n        this.translate.get('EMAIL_TAKEN').subscribe(str => this.showToast(str));\n      } else if (error.code === 125) {\n        this.translate.get('EMAIL_INVALID').subscribe(str => this.showToast(str));\n      } else {\n        this.translate.get('ERROR_NETWORK').subscribe(str => this.showToast(str));\n      }\n\n      this.showContentView();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ProfilePage } from './profile-page';\nimport { SharedModule } from '../../shared.module';\nimport { SignInPageModule } from '../sign-in/sign-in.module';\nimport { ChangePasswordPageModule } from '../change-password/change-password.module';\nimport { SettingsPageModule } from '../settings-page/settings-page.module';\nimport { ProfileEditPageModule } from '../profile-edit/profile-edit.module';\n\n@NgModule({\n  declarations: [\n    ProfilePage,\n  ],\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ProfilePage\n      }\n    ]),\n    SharedModule,\n    SignInPageModule,\n    ChangePasswordPageModule,\n    SettingsPageModule,\n    ProfileEditPageModule\n  ],\n})\nexport class ProfilePageModule {}\n","<ion-content>\n\n  <ion-grid fixed>\n\n    <ion-row class=\"ion-justify-content-center\">\n      <ion-col class=\"ion-no-padding\" size-xs=\"12\" size-sm size-md size-lg=\"8\">\n\n        <div>\n          <section class=\"heading\">\n            <ion-avatar>\n              <img src-fallback=\" ./assets/imgs/avatar.png\" [src]=\"user?.attributes.photo?.url()\" />\n            </ion-avatar>\n            <ion-text color=\"light\">\n              <h2 style=\"font-weight: bold;\">{{ user?.attributes.name }}</h2>\n              <h4>{{ user?.attributes.email }}</h4>\n\n              <h3 *ngIf=\"isGuest\">\n                INVITADO\n              </h3>\n            </ion-text>\n\n            <div style=\"width: 150px;\">\n              <ion-button class=\"ion-margin-top\" size=\"small\" expand=\"block\" color=\"light\" (click)=\"onPresentSignUpModal()\"\n              *ngIf=\"isGuest\">\n              REGISTRAR\n            </ion-button>\n\n            <ion-button class=\"ion-margin-top\" size=\"small\" expand=\"block\" color=\"light\" (click)=\"onPresentSignInModal()\"\n              *ngIf=\"!user || isGuest\">\n              INGRESAR\n            </ion-button>\n            </div>\n\n          </section>\n\n          <ion-list class=\"ion-no-padding\">\n            <ion-item color=\"light\" (click)=\"goTo('orders')\">\n              <ion-icon name=\"list\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Mis Pedidos</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item hidden color=\"light\" (click)=\"goTo('payment')\">\n              <ion-icon name=\"card\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">{{ 'PAYMENT' | translate }}</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item color=\"light\" (click)=\"goTo('addresses')\">\n              <ion-icon name=\"pin\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Direcciones</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item color=\"light\" (click)=\"goTo('favorites')\">\n              <ion-icon name=\"heart\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Favoritos</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item color=\"light\" (click)=\"onPresentChangePasswordModal()\">\n              <ion-icon name=\"lock-closed\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Cambiar contraseña</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item color=\"light\" (click)=\"onPresentEditModal()\">\n              <ion-icon name=\"create\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Editar Perfil</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item hidden color=\"light\" (click)=\"onPresentSettingsModal()\">\n              <ion-icon name=\"cog\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Configuraciones</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item hidden lines=\"none\" color=\"light\" (click)=\"goTo('help')\">\n              <ion-icon name=\"help-buoy\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Te ayudamos</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n            <ion-item lines=\"none\" color=\"light\" (click)=\"onLogout()\" *ngIf=\"!isGuest\">\n              <ion-icon name=\"log-out\" slot=\"start\" color=\"primary\"></ion-icon>\n              <ion-label>\n                <p class=\"link text-large\">Salir</p>\n              </ion-label>\n              <ion-icon name=\"chevron-forward\" slot=\"end\" color=\"dark\"></ion-icon>\n            </ion-item>\n          </ion-list>\n\n        </div>\n\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>","import { Component, Injector, OnInit, NgZone } from '@angular/core';\nimport { BasePage } from '../base-page/base-page';\nimport { User } from '../../services/user';\nimport { ProfileEditPage } from '../profile-edit/profile-edit';\nimport { ChangePasswordPage } from '../change-password/change-password';\nimport { SettingsPage } from '../settings-page/settings-page';\nimport { SignInPage } from '../sign-in/sign-in';\n@Component({\n  selector: 'page-profile-page',\n  templateUrl: 'profile-page.html',\n  styleUrls: ['profile-page.scss']\n})\nexport class ProfilePage extends BasePage implements OnInit {\n\n  public user: User;\n\n  public isGuest: boolean;\n\n  constructor(injector: Injector, private ngZone: NgZone) {\n    super(injector);\n  }\n\n  enableMenuSwipe() {\n    return false;\n  }\n\n  async ionViewDidEnter() {\n    this.user = User.getCurrent();\n\n    this.checkIsGuest();\n\n    const title = await this.getTrans('PROFILE');\n    this.setPageTitle(title);\n\n    this.setMetaTags({\n      title: title\n    });\n  }\n\n  ngOnInit() {\n    this.user = User.getCurrent();\n    this.checkIsGuest();\n\n    window.addEventListener('user:login', (ev: CustomEvent) => {\n      this.user = ev.detail;\n    });\n\n    window.addEventListener('user:loggedOut', () => {\n      this.user = null;\n    });\n  }\n\n  checkIsGuest() {\n    this.isGuest = this.user && this.user.attributes.authData && this.user.attributes.authData['anonymous'] !== undefined\n  }\n\n  goTo(page: string) {\n\n    if (!User.getCurrent() && page !== 'help') {\n      return this.onPresentSignInModal();\n    }\n\n    this.navigateToRelative('./' + page);\n  }\n\n  async onPresentSignInModal() {\n\n    await this.showLoadingView({ showOverlay: true });\n\n    const modal = await this.modalCtrl.create({\n      component: SignInPage,\n      componentProps: {\n        showLoginForm: true\n      }\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n  async onPresentSignUpModal() {\n\n    await this.showLoadingView({ showOverlay: true });\n\n    const modal = await this.modalCtrl.create({\n      component: SignInPage,\n      componentProps: {\n        showSignUpForm: true\n      }\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n  async onPresentEditModal() {\n\n    if (!User.getCurrent()) return this.onPresentSignInModal();\n\n    await this.showLoadingView({ showOverlay: true });\n    \n    const modal = await this.modalCtrl.create({\n      component: ProfileEditPage\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n  async onPresentChangePasswordModal() {\n\n    if (!User.getCurrent()) return this.onPresentSignInModal();\n\n    await this.showLoadingView({ showOverlay: true });\n    \n    const modal = await this.modalCtrl.create({\n      component: ChangePasswordPage\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n  async onPresentSettingsModal() {\n\n    if (!User.getCurrent()) return this.onPresentSignInModal();\n\n    await this.showLoadingView({ showOverlay: true });\n    \n    const modal = await this.modalCtrl.create({\n      component: SettingsPage\n    });\n\n    await modal.present();\n\n    this.showContentView();\n  }\n\n  onLogout() {\n    window.dispatchEvent(new CustomEvent('user:logout'));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SettingsPage } from './settings-page';\nimport { SharedModule } from '../../shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SettingsPage,\n  ],\n  imports: [\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    SettingsPage\n  ]\n})\nexport class SettingsPageModule {}\n","<ion-header class=\"ion-no-border\">\n    <ion-toolbar>\n      <ion-buttons slot=\"end\">\n        <ion-button (click)=\"onDismiss()\">\n          <ion-icon slot=\"start\" name=\"close\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n      <ion-title>{{ 'SETTINGS' | translate }}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n<ion-content>\n\n  <ion-item color=\"light\" lines=\"none\" class=\"ion-margin-vertical\" *ngIf=\"isHybrid()\">\n    <ion-label>{{ 'PUSH_NOTIFICATIONS' | translate }}</ion-label>\n    <ion-toggle (ionChange)=\"onChangeIsPushEnabled($event)\" [(ngModel)]=\"preference.isPushEnabled\">\n    </ion-toggle>\n  </ion-item>\n\n  <ion-list>\n    <ion-radio-group allowEmptySelection=\"false\" [value]=\"preference.lang\" (ionChange)=\"onChangeLang($event)\">\n      <ion-list-header>\n        <span class=\"bold\" color=\"dark\">{{ 'LANGUAGE' | translate }}</span>\n      </ion-list-header>\n      <ion-item color=\"light\">\n        <ion-label>{{ 'ENGLISH' | translate }}</ion-label>\n        <ion-radio value=\"en\"></ion-radio>\n      </ion-item>\n      <ion-item color=\"light\">\n        <ion-label>{{ 'SPANISH' | translate }}</ion-label>\n        <ion-radio value=\"es\"></ion-radio>\n      </ion-item>\n      <ion-item color=\"light\" lines=\"none\">\n        <ion-label>{{ 'ARABIC' | translate }}</ion-label>\n        <ion-radio value=\"ar\"></ion-radio>\n      </ion-item>\n    </ion-radio-group>\n  </ion-list>\n</ion-content>","import { Component, Injector } from '@angular/core';\nimport { LocalStorage } from '../../services/local-storage';\nimport { BasePage } from '../base-page/base-page';\nimport { Installation } from '../../services/installation';\n\n@Component({\n  selector: 'page-settings-page',\n  templateUrl: 'settings-page.html',\n  styleUrls: ['settings-page.scss']\n})\nexport class SettingsPage extends BasePage {\n\n  constructor(injector: Injector,\n    private installationService: Installation,\n    private storage: LocalStorage) {\n    super(injector);\n  }\n\n  enableMenuSwipe() {\n    return true;\n  }\n\n  onDismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n  async onChangeIsPushEnabled(event: CustomEvent) {\n\n    if (!event) return;\n\n    const isPushEnabled = event.detail.checked;\n\n    try {\n\n      const id = await this.installationService.getId();\n\n      await this.installationService.save(id, {\n        isPushEnabled: isPushEnabled\n      });\n\n      this.storage.setIsPushEnabled(isPushEnabled);\n      this.preference.isPushEnabled = isPushEnabled;\n\n    } catch (error) {\n      console.warn(error);\n    }\n\n  }\n\n  onChangeLang(event: CustomEvent) {\n\n    if (!event) return;\n\n    const lang = event.detail.value;\n\n    if (lang === 'ar') {\n      document.dir = 'rtl';\n    } else {\n      document.dir = 'ltr';\n    }\n\n    this.storage.setLang(lang);\n    this.translate.use(lang);\n    this.preference.lang = lang;\n   \n  }\n\n}\n"]}